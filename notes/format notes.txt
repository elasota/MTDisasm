Values are stored little endian on Windows, but big endian on Macintosh.  This is VERY handy since re-exporting the same file to both formats will tend to reveal the byte swap locations in the binary data, making it way easier to determine the size of values.  However, many data types are NOT the same size on both platforms.

Files don't appear to use any kind of context-free structure, objects are just stored sequentially, which means it's impossible to parse a file without knowing the binary layout of each object type.  A common paradigm seems to be a 32-bit ID followed by a revision number, frequently followed by what look like some sort of 32-bit ID and then a size field.  However, the size field is VERY frequently misleading, or its meaning hasn't been determined yet.  Sometimes it represents the size of the entire object starting from the type ID to the next type ID, sometimes it represents the size of a specific data chunk, sometimes it's not even there.

However, components must be modular - the editor will allow you to load a project even if the modifier's extension was removed, so they are clearly separable.

The asset table from mTropolis 1.1 contains file positions for assets, but Obsidian doesn't.  Obsidian appears to have been created with a later version, maybe 1.1.1 or 1.1.2 - 2.0 was released long after Obsidian's launch.

The asset types are the same as the DataObject types - e.g. if he asset type is 0x55, then the data object will be 0x55.  All assets appear to be size-tagged.


There are 6 types of assets: PICTs, mToons, sounds, QuickTime (movies and QTVR panoramas), MIDI, color tables.  There's an additional asset type, 0x1f, which is currently unknown, and appears to be emitted whenever you place a text label object.  0x1f assets are always unnamed.  Based on some data inspection, it looks like some kind of image, so it might be a pre-rendered image of the text.

32-bit images are stored bottom-up on Windows and top-down on Mac.

Color tables are 16 bit per channel in Mac builds and 8 bit per channel in Win builds.  Looks like indexes 0 and 255 are hard-coded to black and white respectively on Windows.

Deleting unused assets will generally wipe the "Macintosh 8bit" color table from the boot stream.

Most things that are named write the name last, which is fairly handy for locating the next object.  Unfortunately, most things that are "Unnamed" in the mTropolis editor have blank names, leading to zeroes in the data that may be mis-parsed if they contain data.

Rectangles on Mac are top, left, bottom, right
Rectangles on Win are left, top, right, bottom
Due to endian differences, this can make rectangles appear to be a pair of 32-bit integers from byte swaps.


Compressed AIFFs are nominally supported but seem to be very buggy.  Attempting to write A-Law or u-Law files fails and IMA 4:1 writes as uncompressed.


EVENT:
	uint32_t event code
	uint32_t event additional info

POINT:
	Mac:
		int16_t top
		int16_t left
	Win:
		int16_t left
		int16_t top

COLOR:
	Mac:
		uint16_t red
		uint16_t green
		uint16_t blue
	Win:
		uint8_t blue
		uint8_t green
		uint8_t red
		uint8_t unused (0 usually)

SYSTEM_FLOAT
	Mac: float80 value
	Win: float64 value

TYPE_TAGGED_VALUE
	uint16_t type tag:
		0x0: null
		0x1: Integer
			int32_t value
		0xd: String - Actual string length and contents stored elsewhere
		0x10: Point
			POINT value
		0x11: Integer range
			int32_t min
			int32_t max
		0x15: Float
			SYSTEM_FLOAT value
		0x1a: Bool
			uint8_t value
		0x1b: Incoming data
		0x1c: Variable reference
			uint32_t unknown
			uint32_t guid
		0x1d: Label
			uint32_t supergroup ID
			uint32_t label ID
	padded to 44 bytes

For some reason, there are two type-tagged value schemes.

PLUGIN_TYPE_TAGGED_VALUE
	uint16_t type tag:
		0x1: Integer
			int32_t value
		0xa: Point
			POINT value
		0xb: Integer range
			int32_t min
			int32_t max
		0xf: Floating point
			SYSTEM_FLOAT value
		0x10: Vector
			SYSTEM_FLOAT angle in radians
			SYSTEM_FLOAT magnitude
			SYSTEM_FLOAT unknown (1000.0)
		0x14: Boolean
			uint16 value
		0x17: Event?
			EVENT value
		0x64: Label
			uint32 id
			uint32 supergroup
		0x66: String
			uint32 unknown (0xff in mTropolis 1.0, length in other versions)
			uint32 length
			char[length] string - null terminated
		0x63: Incoming data
		0x73: Variable reference
			uint32 guid
			uint32 extra data size
			byte[extra data size] unknown
		0xff: Object reference
			uint32 length
			uint32 length (again??)
			char[length] object path - null terminated
			byte[34] unknown


Author messages are event code 900 and the additional event info is the author message ID

Asset streams appear to always be empty in built projects.

Aliased objects are stored in the boot stream.


Global header:

struct MGlobalHeader
{
	uint16_t platform;		// 00   0 = Mac, 1 = Windows
	uint32_t magic;			// 02   0xa5a555aa
	uint32_t unknown;		// 06   Always 0
	uint32_t unknown;		// 0a   Always 14
	uint32_t unknown;		// 0e   Always 1002
	uint16_t unknown;		// 12   Always 0
	uint32_t unknown;		// 14   On Win, 0x0100004b, on Mac, 0x0000004a
	uint32_t unknown;		// 18   Always 0x14
	uint16_t unknown;		// 1c   Always 0
	uint32_t unknown;		// 1e   Always 0x22
	uint32_t unknown;		// 22   Always 0x000003e8
	uint16_t unknown;		// 26   2 in tests, 3 in Obsidian
	uint32_t unknown    	// 28   On Win, 0x0100004b, on Mac, 0x0000004a
	uint32_t unknown    	// 2c   0xb3 in tests, 0xd928 in Obsidian
	uint16_t numStreams;    // 30
	uint16_t unknown;		// 32   Always 0
	uint16_t unknown;		// 34   Always 1
	uint16_t numSegments;   // 36
};


Win:
01 00 a5 a5 55 aa 00 00 00 00 0e 00 00 00 ea 03
00 00 00 00 4b 00 00 01 14 00 00 00 00 00 22 00
00 00 e8 03 00 00 02 00 4b 00 00 01 b3 00 00 00
04 00 00 00 01 00 01 00
Mac:
00 00 aa 55 a5 a5 00 00 00 00 00 00 00 0e 00 00
03 ea 00 00 00 00 00 4a 00 00 00 14 00 00 00 00
00 22 00 00 03 e8 00 02 00 00 00 4a 00 00 00 b3
00 04 00 00 00 01 00 01


Obsidian catalog entries are 42 bytes apart, but 1.1 exports are only be 34 bytes apart.  This probably means 0x3e8 is a stream table data object and the 2 vs 3 is revision.


Scene format:
uint32_t 000003e9
uint16_t 0
uint32_t 0100004b (win) or 0000004a (mac)
uint32_t 0x26
char[24] scene name
uint32_t 7
uint16_t 2
uint32_t 8
uint32_t 0x38 (56)
uint32_t 0x5c8f
Win: 00 00 00 10 00 00 01 00 00 00
Mac: 00 00 00 00 10 00 00 01 00 00
Rect COORDINATES
Rect COORDINATES
uint32_t 0x02000000
byte[8] zero fill
uint32_t 0x0000000e
uint16_t 1
uint32_t 0100004b (win) or 0000004a (mac)
uint32_t 0x000011fe on Mac, 0x000011dc on Win  - EOF is the next position + this value



Label object type: 0x1f
Text labels have 24 bytes of unknown purpose after the text on Mac only

Appears to be revision-tagged.


Scene format:
TData type 3e9 size 38
char[16] scene name
uint16_t build ID?
byte[6] 00 0a 73 e8 00 00

Object table:
uint32_t type ID
uint16_t revision
uint32_t flags?  (0x80 flag = final object?)
uint32_t size (including tag)


MINISCRIPT PROGRAM:
	unt32_t 0xfffffffb
	uint32_t size of instructions
	uint32_t number of instructions
	uint32_t number of local references
	uint32_t number of attributes
	INSTRUCTION[number of instructions]
	LOCALREF[number of local references]
	ATTRIBUTE[number of attributes]

	INSTRUCTION:
		uint16_t opcode
		uint16_t flags
		uint16_t size (includes opcode header)
		byte[size - 6] instruction data

	LOCALREF:
		uint32_t unknown
		uint8_t length of name
		uint8_t unknown
		char[length of name] name (null terminated)

	ATTRIBUTE:
		uint16_t length of string
		char[length of string] string (null terminated)

	Opcodes:
		0x834: set
			pop value, pop destination, assign
		0x898: send
			EVENT event
			pop destination, pop additional, send event
			flags:
				0x04 = no immediate
				0x08 = no cascade
				0x10 = no relay
		0xd8: builtin function
			uint32_t builtin function ID
				0x01: sin
				0x02: cos
				0x03: random
				0x04: sqrt
				0x05: tan
				0x06: abs
				0x07: sgn
				0x08: arctangent
				0x09: exp
				0x0a: ln
				0x0b: log
				0x0c: cosh
				0x0d: sinh
				0x0e: tanh
				0x0f: rect2polar
				0x10: polar2rect
				0x11: trunc
				0x12: round
				0x13: num2str
				0x14: str2num
		0xd2: compare equal
			pop a, pop b, push a == b
		0x12f: create point
			pop max, pop min, push point
		0x130: create integer range
			pop max, pop min, push int range
		0x131: create vector
			pop magnitude, pop degrees, push vector
		0x135: get child item
			uint32_t index into string table
			pop reference, push retrieved attribute reference
			flags:
				1 = reference
				32 = array index (NOTE: This still requires looking up the attribute.  If no attribute is specified, the "value" attribute is used.)
		0x191: push constant/local value
			uint16_t type
				0x00 = null?
				0x15 = SYSTEM_FLOAT (8-10 bytes)
				0x1a = boolean (1 byte)
				0x1f9 = local object reference (4 bytes)
				0x1fa = global object reference (4 bytes)
			flags:
				1 = reference
		0x192: push global
			uint32_t global ID
				1 = element
				2 = modifier
				3 = source
				4 = incoming
				5 = mouse
				6 = ticks
				7 = scene
				8 = sharedScene
				9 = section
				10 = project
				11 = sharedScene
			flags:
				1 = reference
			NOTE: "subsection" is emitted as "modifier.subsection" and "this" is emitted as "element.this" for some reason.
		0x193: push string constant
			uint16_t length
			char[length + 1] str (null terminated)
		0x7d3: jump
			uint32_t flags (2 = conditional, 1 = unconditional)
			uint32_t unknown
			uint32_t offset of new instruction FROM THIS INSTRUCTION


-------------------------------------------------------------------------------------------
KNOWN DATA OBJECT TAGS AND FORMATS
-------------------------------------------------------------------------------------------
0x15: Text label object.  Known revisions: 0 (Win) 2 (Mac)
uint32_t unknown (0)
uint32_t size including tag
uint32_t unknown (guid?)
uint16_t length of name
uint32_t unknown (structural flags?)
uint16_t layer
uint16_t section ID
WIN: uint16_t unknown (0x1700)
RECT rect
RECT rect
uint32_t unknown (asset ID?)
WIN: byte[8] unknown (zero fill)
MAC: byte[30] unknown
char[length of name] name (null terminated)


0x17: Global object parameters?
	uint32_t marker
	uint32_t size including tag
	uint16_t number of global modifiers/aliased objects (includes deleted objects, a.k.a. "debris")
	byte[4] unknown (0)

0x27: Alias.  Known revisions: 0, 1, 2
	uint32_t modifier flags
	uint32_t size including tag
	uint16_t alias index (1-based)
	uint32_t unknown
	uint32_t unknown
	uint16_t length of name
	POINT editor layout position
	if revision >= 2:
		uint32_t guid
	char[length of name] name - null terminated


0x3c0: Unknown.  Seen in boot segment after stream header.  Known revisions: 2
uint32_t marker
uint32_t size including tag



0x3e9: Stream header.  Known revisions: 0
uint32_t marker
uint32_t size including tag?  always 0x26
char[16] name
uint16_t random build ID?
byte[6] unknown - always 00 0a 73 e8 00 00


0x3ec: Project presentation settings.  Appears in boot stream before asset table.  Known revisions: 2
uint32_t marker
uint32_t size including tag
???


0xd: Boot stream asset table.  Known revisions: 2, 4

Revision 2:
uint32_t marker (observed with 0x100 flag in Obsidian Win)
uint32_t unknown - Appears to be 22 + length of concatenated name strings.
uint32_t unknown
uint32_t number of assets
ASSET[number of assets]:
	uint32_t flags1 (always 0 with MTI Win)
	uint16_t length of name
	uint16_t unknown2 - Always 0
	uint32_t unknown3 - Appears to be containing scene ID.
	uint32_t unknown4 - Appears to be the file position of the DataObject. This will contain a stale value if the asset isn't actually included.
	char[length of name] name (null terminated)

Revision 4:
uint32_t marker (observed with 0x100 flag in Obsidian Win)
uint32_t unknown - Appears to be 22 + length of concatenated name strings.
uint32_t unknown
uint32_t number of assets
ASSET[number of assets]:
	uint32_t flags1 (1 = deleted?  2 = limit one per segment)
	uint16_t length of name
	uint16_t unknown2 - Always 0
	uint32_t unknown3 - Always 0x136 in Obsidian, but in exported projects tends to vary.  Appears to be containing scene ID.
	uint32_t unknown4 - Always e990055a in Obsidian, but in exported projects this appears to be the file position of the DataObject. This will contain a stale value if the asset isn't actually included.
	uint32_t asset type (0x02 = Color table, 0x0e = Image, 0x10 = mToon, 0x54 = Sound, 0x55 = Movie, 0x5c = MIDI, 0x1f = Not sure, appears to be an image, always nameless)
	uint32_t flags2
	char[length of name] name (null terminated)


0x19: Unknown.  Appears in boot stream after asset table.  Known revisions: 0
	uint32_t marker
	uint32_t size including tag   always 0x10
	byte[2] unknown - Always 00 00


0x1e: Color table asset.  Known revisions: 0
NOTE: Color tables are always padded to 256 colors even if the CLUT file contained fewer actual colors.

uint32_t marker
uint32_t size including tag
byte[4] unknown (0 on Mac, garbage on Windows)
uint32_t asset ID
uint32_t unknown (0)

Windows format:
	byte[14] unknown
	For each color (256):
		uint8_t blue
		uint8_t green
		uint8_t red
		uint8_t unused

Mac format:
	byte[20] unknown
	MacOS clut header:
		uint32_t seed
		uint16_t flags (0x8000 = for indexed device  0x0000 = for pixel map)
		uint16_t number of colors minus one
		
	For each color (256)
		uint16_t color index
		uint16_t red
		uint16_t green
		uint16_t blue


0x22: Project label map.  Known revisions: 0
uint32_t marker
uint32_t unknown (0x16) - possibly size and offset to "5" field
uint32_t number of supergroups (5)
uint32_t next available ID

For each supergroup:
	uint32_t name length
	uint32_t unknown (varies)
	uint32_t unknown (0)
	char[name length] name
	uint32_t number of children
	For each child (label tree entry):
		uint32_t length of name
		uint32_t is group
		uint32_t id
		uint32_t unknown (0)
		uint32_t flags (0x80000000 = expanded in editor?)
		char[length of name] name - not null terminated
		if group:
			uint32_t number of children
			children (recursive - label tree entry format)


Structure tree flags:
	0x8 = No more siblings
	0x4 = Has children

Modifier flags:
	0x2 = Last one


Structural element modifiers do not include a modifier count.  The last modifier of a structural element will have a 0x2 flag in its modifier flags indicating that it is the last one, but they will also appear before any other structural elements, so it's not strictly necessary.

Scenes are always declared as a structural element.  It doesn't appear to be possible to use a sound as a scene.

Scene structural elements persist indefinitely.
Changes to a scene's structural element's persistent properties (such as position) will persist indefinitely even if the scene is unloaded!




0x2: Project structural def.  Known revisions: 1, 2  (No known differences between formats)
	uint32_t structure tree flags
	uint32_t size including tag
	uint32_t unknown (large number)
	uint32_t unknown (0x00800008 in tests, 0x00800009 in Obsidian)
	uint16_t length of data file name
	char[length of data file name] name of data file - null terminated

0x3: Section structural def.  Known revisions: 1
	uint32_t structure tree flags
	uint32_t size including tag
	byte[4] unknown
	uint16_t length of name
	byte[12] unknown
	char[length of name] name - null terminated

0x21: Subsection structural def.  Known revisions: 0
	uint32_t structure tree flags
	uint32_t size including tag
	byte[4] unknown
	uint16_t length of name
	byte[6] unknown
	char[length of name] name - null terminated

0x5: QuickTime movie structural def.  Known revisions: 2
	uint32_t structure tree flags
	uint32_t size including tag
	uint32_t unknown
	uint16_t length of name
	uint32_t structural flags
	uint16_t layer
	byte[44] unknown
	uint16_t section id
	byte[2] unknown (0)
	RECT rect1
	RECT rect2
	uint32_t asset id
	uint32_t unknown (appears as 6000000 decimal - possibly scaled framerate or timing-related)
	uint16_t volume (out of 100)
	uint32_t animation flags (0x2000000 = play every frame)
	byte[4] unknown (byte sequence - similar by platform)
	byte[4] unknown (byte sequence - differs by platform)
	uint32_t stream locator
	byte[4] unknown
	char[length of name] name - null terminated

0x6: mToon structural def.  Known revisions: 2
	uint32_t structure tree flags
	uint32_t size including tag
	uint32_t unknown
	uint16_t length of name
	uint32_t structural flags
	byte[2] unknown
	uint32_t animation flags (0x28000000)
		0x02000000 = Maintain rate
		0x08000000 = Loop
	byte[4] unknown (zeros)
	uint16_t section ID
	RECT rect1
	RECT rect2
	uint32_t unknown (0xa)
	uint32_t rate * 10000
	uint32_t stream locator
	uint32_t unknown (layer?)

0x7: Image structural def.  Known revisions: 2
	uint32_t structure tree flags
	uint32_t size including tag
	uint32_t unknown
	uint16_t length of name
	uint32_t unknown (probably structural flags)
	byte[2] unknown
	uint16_t section ID
	DORect rect1
	DORect rect2
	uint32_t unknown
	uint32_t unknown
	byte[4] unknown (0)

0x8: Graphic structural def.  Known revisions: 1
	uint32_t structure tree flags
	uint32_t size including tag
	uint32_t guid
	uint16_t length of name
	uint32_t structural flags
	byte[2] unknown
	uint16_t section ID
	DORect rect1
	DORect rect2
	uint32_t stream locator  (1-based stream index, sometimes observed with 0x10000000 flag set, not sure of the meaning)
	byte[4] unknown
	

0xa: Sound structural def.  Known revisions: 3
	uint32_t structure tree flags
	uint32_t size including tag
	uint32_t guid
	uint16_t length of name
	uint32_t element flags
	uint32_t sound flags
		0x80000000 = loop (NOTE: Not the same as movie/mToon loop flag)
		0x40000000 = paused
	uint16_t unknown
	byte[2] unknown (0)
	uint16_t right volume
	uint16_t left volume
	int16_t balance (-100 to 100)
	uint32_t asset ID
	byte[8] unknown (0)
	char[length of name] name

0x24: Unknown. Known revisions: 0
	uint32_t marker
	uint32_t unknown
		high byte is length of filename
	byte[4] unknown (00 00 02 00)
	uint16_t asset ID
	byte[6] unknown (0)
	uint16_t length of filename
	byte[36] unknown
	byte[4] file position of this data object - big endian
	byte[20] unknown
	byte[length of filename] - filename (null terminated)

Seems associated with MTI post-games AVI clips from the movie. 

0x25: Unknown. Known revisions: 2

0xfffffffe: Debris.  Replaces deleted modifiers in the global modifier list.  Known revisions: 0
	uint32_t marker
	uint32_t size including tag (0x0e)

0x2c6: Behavior modifier.  Known revisions: 1
	uint32_t unknown (0x22)
	uint32_t size including tag (but not children)
	byte[2] unknown (0)
	uint32_t unknown - Changes erratically
	uint32_t unknown - Sometimes same as previous sometimes, sometimes 0
	uint16_t unknown
	uint32_t unknown - Changes erratically
	POINT editor layout position
	uint16_t length of name
	uint16_t number of children
	char[length of name] name - null terminated
	uint32_t flags?  1 = Switchable
	EVENT "enable when"
	EVENT "disable when"
	byte[2] unknown (0)
	For each child:
		child object


0x3c0: Miniscript modifier   Known revisions: 0x3eb
	uint32_t unknown (0x222)
	uint32_t size including tag
	uint32_t unknown (0x10e3f)
	byte[6] unknown (0)
	uint32_t unknown (0x08770000)
	byte[4] unknown (ff ff ff ff)
	uint16_t length of name (<= 64)
	char[length of name] name (null terminated) up to length of 64 characters. no null if len == 64
	EVENT "enable when"
	byte[11] unknown (0)
	uint8_t unknown (0 or 1)
	MINISCRIPT_PROGRAM program


Message destination codes:
	0x65: Shared scene
	0x66: Scene
	0x67: Section
	0x68: Project
	0x69: Active scene
	0x6a: Element's parent
	0x6b: Children
	0x6c: Modifier's parent
	0x6d: Subsection
	0xc9: Element
	0xcf: Source's parent
	0xd4: Behavior
	0xd1: Next Element
	0xd2: Prev Element
	0xd3: Behavior's parent
	Element GUID: Direct reference

"With" codes:
	0: None
	0x1b: Incoming data
	0x1c: Reference

TYPICAL_MODIFIER_HEADER:
	uint32_t unknown
	uint32_t size including tag
	uint32_t guid
	byte[6] unknown (0)
	uint32_t unknown (varies)
	byte[4] unknown (ff)
	uint16_t length of name
	char[length of name] name - null terminated

MESSAGE_DATA_LOCATOR:
	uint16_t type code
		0x00: none
		0x1b: incoming data
		0x1c: object reference
	byte[4] unknown (0)
	uint32_t guid
	byte[36] unknown (garbage)
		
0x2da: Messenger modifier  Known revisions: 0x3ea
	TYPICAL_MODIFIER_HEADER modifier header
	uint32_t message flags
	uint32_t when event ID
	EVENT send event
	uint16_t unknown (5)
	uint32_t destination
	byte[10] unknown (0)
	TYPE_TAGGED_VALUE with
	uint32_t when event info
	uint16_t with source string length
	char[source string length] with source - not null terminated

0x2bc: If Messenger modifier
	TYPICAL_MODIFIER_HEADER modifier header
	uint32_t message flags
	EVENT execute when
	EVENT message to send
	uint16_t unknown (5)
	uint32_t destination
	byte[10] unknown (0)
	TYPE_TAGGED_VALUE with
	byte[8] unknown
	uint16_t source code length
	uint16_t with source string length
	char[with source string length] with source - not null terminated
	char[source code] source code - null terminated
	MINISCRIPT_PROGRAM program

0x302: Keyboard Messenger modifier   Known revisions: 0x3eb
	TYPICAL_MODIFIER_HEADER modifier header
	uint32_t message flags
		embeds additional flags:
			0x1000000 - on key down
			0x4000000 - on key up
			0x8000000 - on key repeat
		uint16_t unknown
		uint16_t key modifiers
			control: 0x1000
			command: 0x0100
			option: 0x0800
		uint8_t keycode - May be a Mac Roman character, if so this is case sensitive!
			0x00 = Any key
			0x01 = Home
			0x03 = Num pad enter
			0x04 = End
			0x05 = Help (F1 on Windows)
			0x08 = Backspace
			0x09 = Tab
			0x0b = Page up
			0x0c = Page down
			0x0d = Return
			0x1b = Escape
			0x1c = Arrow left
			0x1d = Arrow right
			0x1e = Arrow up
			0x1f = Arrow down
			0x7f = Delete
		byte[8] unknown
		EVENT message
		uint16_t unknown
		uint32_t destination
		byte[10] unknown
		TYPE_TAGGED_VALUE with
		uint8_t with source string length
		uint8_t with string length
	char[with source string length] with source - not null terminated
	char[with string length] with string - not null terminated

0x2e4: Timer Messenger modifier
	TYPICAL_MODIFIER_HEADER modifier header
	uint32 message and timer flags
		0x10000000: Looping
	EVENT execute when
	EVENT send
	EVENT terminate when
	uint16 unknown
	uint32 destination
	uint8 unknown4
	MESSAGE_DATA_LOCATOR with
	uint8 unknown (0)
	uint8 minutes
	uint8 seconds
	uint8 hundredths of seconds
	uint32 unknown
	uint32 unknown
	byte m_unknown8
	uint8 with source length
	uint8 unknown
	char[with source string length] with source - not null terminated

0x2f8: Boundary Detection Messenger modifier

0x2ee: Collision Detection Messenger modifier    Known revisions: 0x3ea
	TYPICAL_MODIFIER_HEADER modifier header
	uint32 message and collision flags
		0x10000000: Detect in front
		0x08000000: Detect behind
		0x02000000: Send to colliding element instead of specified destination
		0x00200000: Send only to first colliding element
		0x01400000: Detect on first contact
		0x01000000: Detect while in contact continuously
		0x00800000: Detect while exiting
		0x00100000: Don't collide with parent element
	EVENT enable when
	EVENT disable when
	EVENT send
	uint16_t unknown
	uint32_t destination GUID
	byte[10] unknown
	MESSAGE_DATA_LOCATOR with
	uint8 with source length
	uint8 unknown
	char[with source string length] with source - not null terminated

0x321: Boolean Variable modifier

0x2c7: Compound Variable modifier

0x322: Integer Variable modifier

0x329: String Variable modifier

0x324: Integer Range Variable modifier

0x328: Floating Point Variable modifier

0x327: Vector Variable modifier

0x326: Point Variable modifier

0x136: Change Scene modifier    Known revisions: 0x3e9
	uint32_t scene change flags
		0x80000000: Next scene in subsection
		0x40000000: Previous scene in subsection
		0x20000000: Specific scene
		0x10000000: Add to return list
		0x08000000: Add to destination list (implies add to return list)
		0x04000000: Wrap around (Not valid when going to specific scene)
	EVENT execute when
	uint32_t target section GUID
	uint32_t target subsection GUID
	uint32_t target scene GUID

0x140: Return modifier

0x29a: Shared Scene modifier   Known revisions: 0x3e8
	TYPICAL_MODIFIER_HEADER modifier header
	EVENT execute when
	byte[4] unknown (0)
	uint32_t target section GUID
	uint32_t target subsection GUID
	uint32_t target scene GUID

0x2df: Set modifier    Known revisions: 0x3e8
	TYPICAL_MODIFIER_HEADER modifier header
	byte[4] unknown (0)
	uint32_t execute when event type
	MESSAGE_DATA_LOCATOR source
	MESSAGE_DATA_LOCATOR target
	uint32_t execute when event info
	uint8_t unknown (0)
	uint8_t source name length
	uint8_t target name length
	byte[3] unknown (00 00 05)
	char[source name length] source name - not null terminated
	char[target name length] target name - not null terminated

0x4d8: Save and Restore modifier   Known revisions: 1000, 1001
	TYPICAL_MODIFIER_HEADER modifier header
	EVENT save when
	EVENT restore when
	MESSAGE_DATA_LOCATOR variable
	Revision 1000:
		uint16_t unknown (1)
		byte[4] unknown
		uint8_t length of file name
		uint8_t length of variable name
		uint8_t length of variable string
		byte unknown
		char[length of variable name] variable name - not null terminated
		char[length of variable string] variable string - not null terminated (seems to emit corrupted on Windows builds)
		char[length of file name] file name - not null terminated
		

	Revision 1001:
		byte[8] unknown
		uint8_t length of file path
		uint8_t length of file name
		uint8_t length of variable name
		uint8_t length of variable string
		char[length of variable name] variable name - not null terminated
		char[length of variable string] variable string - not null terminated
		char[length of file path] file path - not null terminated
		char[length of file name] file name - not null terminated
	

0x26c: Scene Transition modifier   Known revisions: 1001
	TYPICAL_MODIFIER_HEADER modifier header
	EVENT enable when
	EVENT disable when
	uint16_t transition type
	uint16_t direction
	uint16_t unknown
	uint16_t steps
	uint32_t duration (6000000 is maximum rate)
	byte[2] unknown


0x276: Element Transition modifier

0x1fe: Simple Motion modifier
	TYPICAL_MODIFIER_HEADER modifier header
	EVENT execute when
	EVENT terminate when
	uint16_t motion type
		1 = out of scene
		2 = into scene
		3 = random bounce
	uint16_t direction flags
		1 = down
		2 = up
		4 = right
		8 = left
	uint16_t steps
	uint32_t delay (4800000 is one second)
	byte[4] unknown (01 00 00 ed)

Into/out of scene appear to be based on scene size.  e.g. a rate of 64 will step 1/64th of the scene dimension in the specified direction per tick.  The delay

A delay of 600000 is 1/8th of a second

0x21c: Path Motion modifier V1    Known revisions: 1001
	Same as V2, except points only have position, frame, and animation flags fields

0x21b: Path Motion modifier V2    Known revisions: 0x3e9
	TYPICAL_MODIFIER_HEADER modifier header
	uint32_t flags
		0x00100000: Reverse
		0x10000000: Loop
		0x02000000: Alternate
		0x08000000: Start at beginning
	EVENT execute when
	EVENT terminate when
	byte[2] unknown (0)
	uint16_t number of points?
	byte[4] unknown (0)
	uint32_t frame duration (in 1/10000000 sec)
	byte[4] unknown (0)
	uint32_t unknown
	POINTS[number of points]:
		POINT position
		uint32 frame
		uint32 animation flags
			0x00000001: Play frames sequentially (ignore frame field)
		uint32 message flags
		EVENT send event
		uint16 unknown
		uint32 destination
		byte[10] unknown (garbage)
		TYPE_TAGGED_VALUE with
		uint8_t with source string length
		uint8_t with string length
		char[with source string length] with source (not null terminated)
		char[with string length] with string (not null terminated)

0x208: Drag Motion modifier

0x226: Vector Motion modifier

0x1a4: Sound Effect modifier

0x32a: Text Style modifier    Known revisions: 0x3e8
	TYPICAL_MODIFIER_HEADER modifier header
	byte[4] unknown (0)
	uint16_t font ID
	uint8_t flags
		0x01: Bold
		0x02: Italic
		0x04: Underline
		0x08: Outline
		0x10: Shadow
		0x20: Condensed
		0x40: Expanded
	byte padding
	uint16_t size
	COLOR text color?
	COLOR background color?
	uint16_t alignment
		0x0000: Left
		0x0001: Center
		0xffff: Right
	uint16_t unknown (24)
	EVENT apply when
	EVENT remove when
	uint16_t length of font name
	char[length of font name] font name - not null terminated
		
	

0x334: Graphic modifier   Known revisions: 0x3e9
	TYPICAL_MODIFIER_HEADER modifier header
	uint16_t unknown (1 on Win, 0 on Mac)
	EVENT apply when
	EVENT remove when
	byte[2] unknown (0)
	uint16_t ink mode
	uint16_t shape
	Windows:
		byte[4] unknown
	Mac:
		byte[6] unknown
	COLOR background color
	COLOR foreground color
	uint16 border size
	COLOR border color
	uint16 shadow size
	uint16 shadow color
	Windows:
		byte[22] unknown
	Mac:
		byte[26] unknown
	uint16_t number of points
	byte[8] unknown
	POINT[number of points] polygon points

0x33e: Object Reference Variable modifier  Known revisions: 1000
	TYPICAL_MODIFIER_HEADER modifier header
	byte[4] unknown (0)
	EVENT set to source's parent when

0x4c4: Color Table modifier   Known revisions: 1001
	TYPICAL_MODIFIER_HEADER modifier header
	EVENT apply when
	uint32_t unknown (1)
	byte[4] unknown (0)
	uint32_t asset ID, or 0xffffffff for nothing

0x4ce: Sound fade modifier   Known revisions: 1000
	TYPICAL_MODIFIER_HEADER modifier header
	byte[4] unknown (0)
	EVENT enable when
	EVENT disable when
	uint16_t fade to volume (out of 100)
	byte[4] coded duration (hours, minutes, seconds, hundredths)
	byte[18] unknown

0x4b0: Gradient modifier

0x384: Image Effect modifier   Known revisions: 1000
	TYPICAL_MODIFIER_HEADER modifier header
	uint32_t flags
		0x40000000 - Don't include borders
	uint16_t type
		1: invert
		2: selected bevels
		3: deselected bevels
		4: tone down
		5: tone up
	EVENT apply when
	EVENT remove when
	uint16_t bevel width
	uint16_t tone amount
	byte[2] unknown(0)
		

0x3ca: Old Mac-only cursor modifier   Known revisions: 0x03e9
	uint32_t unknown
	uint32_t size
	uint32_t unknown (0xb4403)
	uint32_t unknown (0)
	uint16_t unknown (1)
	uint32_t unknown (0x2f85df)
	byte[4] unknown (00 48 00 6d)
	uint16_t length of name
	char[length of name] name - null terminated
	Mac-only part (absent in 1.1+ but present and big endian in 1.0 projects):
		EVENT apply when
		uint32_t unknown (1)
		uint16_t unknown (0)
		uint32_t cursor:
			0: Inactive pointer
			1: Touch
			2: Hand grab B&W
			3: Hand open B&W
			4: Hand point up
			5: Hand point right
			6: Hand point left
			7: Hand point down
			8: Hand grab color
			9: Hand open color
			10: Arrow
			11: Pencil
			12: Smiley
			13: Wait
			14: Hidden
			
			

0xffffffff: Modifier from an extension - Known revisions: 0x03e9
	uint32_t unknown (0)
	uint32_t weirdly-coded size
		For some reason this is the total size on MacOS but on Windows it's the size excluding the name length + name length * 256
	char[16] modifier name
	uint32_t guid
	byte[6] unknown (0)
	uint16_t extension modifier revision
	uint32_t unknown
	byte[4] unknown
	uint16_t name length
	char[name length] name - null terminated
	Modifier data

CursorMod: Cursor modifier   Known revisions: 0, 1
Revision 0:
	PLUGIN_TYPE_TAGGED_VALUE apply when (event)
	PLUGIN_TYPE_TAGGED_VALUE cursor (label - cursor is label ID)
Revision 1:
	PLUGIN_TYPE_TAGGED_VALUE apply when (event)
	PLUGIN_TYPE_TAGGED_VALUE remove when (event)
	PLUGIN_TYPE_TAGGED_VALUE cursor (label - cursor is label ID)
	uint16_t unknown
	uint32_t cursor: (loaded from extension resources)
		10003: hand grab B&W
		10004: hand open B&W
		10005: hand point up
		10006: hand point right
		10007: hand point left
		10008: hand point down
		10009: hand grab color
		10010: hand open color
		10011: arrow
		10012: pencil
		10013: smiley
		10014: wait
		10015: hidden
		10016: empty speech bubble right
		10017: empty speech bubble left
		10020: filled speech bubble right
		10021: filled speech bubble left
		10022: eyedropper
		10023: sparkles
		10024: circular crosshairs
		10025: magnifying glass
		10026: paint bucket
		10027: eraser
		10028: scissors
		10029: "no" symbol
		10030: movie symbol
		10031: paintbrush
		10032: checkmark
		10033: music notes
		10034: tick crosshairs
		10035: white-filled arrow
		10036: skull and crossbones
		10037: arrow down 3D
		10038: arrow up 3D

MediaCue: Media Cue Messenger modifier   Known revisions: 1
	PLUGIN_TYPE_TAGGED_VALUE enable when (always event type)
	PLUGIN_TYPE_TAGGED_VALUE disable when (always event type)
	PLUGIN_TYPE_TAGGED_VALUE send (always event type)
	PLUGIN_TYPE_TAGGED_VALUE non-standard message flags (always int type)
		0x1 = immediate
		0x2 = cascade
		0x4 = relay
	uint16_t unknown
	uint32_t destination
	uint32_t unknown

	PLUGIN_TYPE_TAGGED_VALUE with - In Obsidian this can sometimes be boolean payloads
	PLUGIN_TYPE_TAGGED_VALUE execute at - May be a label, variable, integer, or integer range

	PLUGIN_TYPE_TAGGED_VALUE trigger timing

ObjRefP: Object reference variable modifier   Known revisions: 2
	PLUGIN_TYPE_TAGGED_VALUE set to source parent when (always event type)
	PLUGIN_TYPE_TAGGED_VALUE unknown (int type, 5)
	PLUGIN_TYPE_TAGGED_VALUE object path (always string type)

ListMod: List modifier   Known revisions: 2 (1.1), 3 (Obsidian)
	uint16 unknown (0x64)
	uint32 contents type
		1: Integer
		2: Point
		3: Range
		4: Float
		5: String
		6: Object
		8: Vector
		9: Boolean
	byte[4] unknown (0)
	version 3+:
		uint16 typetag? (0x14)
		uint16 persistent (if 0, no more data follows.  if 1, data follows)
		if persistent:
			uint32 number of values
			PLUGIN_TYPE_TAGGED_VALUE[number of values]

MIDIModf: MIDI modifier   Known revisions: 1 (1.1)  2 (Obsidian)
	uint16_t unknown (0x17)
	EVENT execute when
	uint16_t unknown (0x17)
	EVENT terminate when
	uint8_t embedded flag

	If embedded flag == 0:
		uint8_t channel
		uint8_t note
		uint8_t velocity
		uint8_t program
		uint16_t unknown (type tag?)
		SYSTEM_FLOAT duration
		
	If embedded flag == 1:
		uint8_t inline file flag
		if inline file flag == 1:
			byte[4] length of embedded MIDI data - big endian
			byte[length of embedded midi data]
		uint8_t loop flag
		uint8_t override tempo flag
		uint8_t volume
		uint16_t unknown (0x0f)
		SYSTEM_FLOAT tempo
		uint16_t unknown (0x0f)
		SYSTEM_FLOAT fade in
		uint16_t unknown (0x0f)
		SYSTEM_FLOAT fade out


STransCt: Scene transition modifier?   Known revisions: 0
	PLUGIN_TYPE_TAGGED_VALUE enable when (always event type)
	PLUGIN_TYPE_TAGGED_VALUE disable when (always event type)
	PLUGIN_TYPE_TAGGED_VALUE send (always event type)
	PLUGIN_TYPE_TAGGED_VALUE non-standard message flags (always int type)
		0x1 = immediate
		0x2 = cascade
		0x4 = relay
	uint16_t unknown
	uint32_t destination
	uint32_t unknown

	PLUGIN_TYPE_TAGGED_VALUE with - In Obsidian this can sometimes be boolean payloads
	PLUGIN_TYPE_TAGGED_VALUE execute at - May be a label, variable, integer, or integer range

	PLUGIN_TYPE_TAGGED_VALUE trigger timing - Always 1
	
0x10: QuickTime movie data  Known revisions: 0
	uint32_t marker (0x80 bit clear on Windows = external.   0x800 bit set on Mac = external.)
	uint32_t combined size of this element desc and data
	byte[4] unknown (0)
	uint32_t unknown - possibly asset ID
	byte[4] unknown (0)
	uint16_t external name length
	Win:
		byte[32] unknown
		uint32_t movie size
		byte[12] unknown
		uint32_t moov atom location
		byte[12] unknown
	Mac:
		byte[66] unknown
		uint32_t movie size
		byte[12] unknown
		uint32_t moov atom location
	char[external name length] external file name
	byte[movie size] movie data


0x11: Sound asset - Known revisions: 2
	uint32_t marker
	uint32_t combined size of asset locator and data
	byte[4] unknown (0)
	uint32_t asset ID?
	byte[20] unknown
		
	Mac:
		byte[4] unknown
		uint16_t sample rate?
		byte[5] unknown (0)
		uint8_t bitsPerSample
		uint8_t encoding (0 = Uncompressed  3 = MACE 3:1, 4 = MACE 6:1)
		uint8_t channels
		byte[4] coded duration (hours, minutes, seconds, 1/100 seconds)
		byte[2] unknown (0)
	Win:
		uint16_t sample rate?
		byte bits per sample
		byte[3] unknown (0)
		byte encoding (0 = Uncompressed  3 = MACE 3:1, 4 = MACE 6:1)
		byte channels
		byte[4] coded duration (hours, minutes, seconds, 1/100 seconds)

	byte[18] unknown (0)
	uint16_t sample rate?
	byte[2] unknown (0)
	uint32_t cue points data size
	uint16_t number of cue points
	byte[4] unknown (0)
	uint32_t unknown - file position
	uint32_t unknown - size
	CUEPOINT[number of cue points] cue points    In MTI there appears to be one cuepoint worth of junk (0xEB filled bytes) if numCuePoints == 0 AND size == 14

	CUEPOINT:
		byte[2] unknown (0)
		uint32_t unknown
		uint32_t position
		uint32_t cue point ID

0xa: Unknown  Known revisions: 3

0xe: Image asset   Known revisions: 1
	uint32_t marker
	uint32_t unknown (possibly size of marker + size of image data)
	byte[4] unknown
	uint32_t asset ID
	uint32_t unknown (0x80000000)
	Mac:
		byte[44] unknown
	Win:
		byte[10] unknown (0)
	RECT rect
	uint32_t hdpi
	uint32_t vdpi
	uint16_t bits per pixel
	byte[2] unknown (varies)
	byte[4] unknown (ff ff ff ff)
	byte[8] unknown (0)
	RECT rect
	uint32_t file position
	uint32_t size

0xf: mToon asset  Known revisions: 1
	uint32_t marker
	byte[8] unknown (0)
	uint32_t asset ID
	Mac:
		byte[88] unknown
	Win:
		byte[54] unknown
	
	uint32_t data file position
	uint32_t size of mToon frame data
	mToon data (see "mtoon notes.txt")

MAC_FORMATTING_SPAN:
	byte[2] unknown
	uint16_t spanStart
	byte[4] unknown
	uint16_t font ID
	uint8_t flags
		0x01: Bold
		0x02: Italic
		0x04: Underline
		0x08: Outline
		0x10: Shadow
		0x20: Condensed
		0x40: Expanded
	byte padding
	uint16_t size
	byte[6] unknown




0x1f: Text asset   Known revisions: 3
	uint32_t marker
	uint32_t size including tag
	uint32_t unknown
	uint32_t asset ID
	uint32_t unknown
	Mac:
		byte[44] unknown
	Win:
		byte[10] unknown (0)
	RECT bitmap rect
	FIXED hdpi
	FIXED vdpi
	uint16_t unknown (1)
	byte[2] big endian pitch
	uint32_t unknown (1)
	uint32_t bitmap size
	byte[20] unknown
	uint32_t string length
	byte[8] unknown
	uint16_t alignment
		0x0000: Left
		0x0001: Center
		0xffff: Right
	uint16_t bitmap flag
	if not bitmap:
		char[string length] string - not null terminated
		Mac:
			uint16 number of formatting spans
			MAC_FORMATTING_SPAN[number of formatting spans] formatting spans
	if bitmap:
		byte[bitmap size] bitmap



0xffff: Stream terminator.   Known revisions: 0
	byte[4] unknown (0)
	uint32_t unknown (might be size of asset data including tag)

The purpose of stream terminators appears to be that some asset data is concatenated linearly at the end of the stream, outside of any object.  QuickTime movies and MIDI modifiers are still inline for some reason.  The stream terminator appears when an asset type (e.g. mToon, audio) is in the asset data section.



